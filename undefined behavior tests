FAILED TESTS:

# TEST NUMBER (TYPE OF ARG)
  INSTRUCTION();
  1. your function ft_printf
  2. unix function printf
     (returned value) -->written on stdout<--

# 0038 (int)
  ft_printf("@main_ftprintf: %####0000 33..1..#00d\n", 256);
  1. (   21) -->@main_ftprintf:  256\n<--
  2. (   50) -->@main_ftprintf:                               256\n<--

# 0040 (int)
  ft_printf("@main_ftprintf: %###-#0000 33...12..#0+0d", 256);
  1. (   30) -->@main_ftprintf: +0000000000256<--
  2. (   49) -->@main_ftprintf: +256                             <--

--------------

SUCCESS TESTS:

   1.      ft_printf("%");                               -> ""
   2.      ft_printf("% ");                              -> ""
   3.      ft_printf("% h");                             -> ""
   4.      ft_printf("%Z");                              -> "Z"
   5.      ft_printf("% hZ");                            -> "Z"
   6.      ft_printf("%05%");                            -> "0000%"
   7.      ft_printf("%-05%");                           -> "%    "
   8.      ft_printf("% hZ%");                           -> "Z"
   9.      ft_printf("% Z", "test");                     -> "Z"
  10.      ft_printf("% Z ", "test");                    -> "Z "
  11.      ft_printf("% Z%s", "test");                   -> "Ztest"
  12.      ft_printf("%000   %", "test");                -> "%"
  13.      ft_printf("%%%", "test");                     -> "%"
  14.      ft_printf("%%   %", "test");                  -> "%   "
  15.      ft_printf("%ll#x", 9223372036854775807);      -> "0x7fffffffffffffff"
  16.      ft_printf("%010s is a string", "this");       -> "000000this is a string"
  17.      ft_printf("%-010s is a string", "this");      -> "this       is a string"
  18.      ft_printf("%05c", 42);                        -> "0000*"
  19.      ft_printf("% Z", 42);                         -> "Z"
  20.      ft_printf("%0 d", 42);                        -> " 42"
  21.      ft_printf("%0 d", -42);                       -> "-42"
  22.      ft_printf("% 0d", 42);                        -> " 42"
  23.      ft_printf("% 0d", -42);                       -> "-42"
  24.      ft_printf("%5+d", 42);                        -> "  +42"
  25.      ft_printf("%5+d", -42);                       -> "  -42"
  26.      ft_printf("%-5+d", 42);                       -> "+42  "
  27.      ft_printf("%-0+5d", 42);                      -> "+42  "
  28.      ft_printf("%-5+d", -42);                      -> "-42  "
  29.      ft_printf("%-0+5d", -42);                     -> "-42  "
  30.      ft_printf("%zhd", "4294967296");              -> "4294967296"
  31.      ft_printf("%jzd", "9223372036854775807");     -> "9223372036854775807"
  32.      ft_printf("%jhd", "9223372036854775807");     -> "9223372036854775807"
  33.      ft_printf("%lhl", "9223372036854775807");     -> ""
  34.      ft_printf("%lhlz", "9223372036854775807");    -> ""
  35.      ft_printf("%zj", "9223372036854775807");      -> ""
  36.      ft_printf("%lhh", "2147483647");              -> ""
  37.      ft_printf("%hhld", "128");                    -> "128"
  38. FAIL ft_printf("@main_ftprintf: %####0000 33..1..#00d\n", 256); -> "@main_ftprintf:                               256\n"
  39.      ft_printf("@main_ftprintf: %####0000 33..1d", 256); -> "@main_ftprintf:                               256"
  40. FAIL ft_printf("@main_ftprintf: %###-#0000 33...12..#0+0d", 256); -> "@main_ftprintf: +256                             "
